
var userServiceClient = require('./serviceClients/userServiceClient');
var permissionsServiceClient = require('./serviceClients/permissionsServiceClient');

var _ = require('lodash');

var userHelper = function(cy){
    this.createUser = function(user, permissionsToGrant, orgId, trustedAccessToken, idmAdministratorToken){
        var createdUser;
        var usClient = new userServiceClient(cy);
        var permClient = new permissionsServiceClient(cy);

        return usClient.registerUser(cy, user, trustedAccessToken)
            .then((userObj) => {
                createdUser = _.assign(userObj, { password: user.password });

                return Promise.all(user.appUsers.map((appUser) => {
                    return usClient.addAppUser(cy, appUser.productId, appUser.id, appUser, trustedAccessToken);
                }));
            })
            .then((appUserResponses) => {
                return Promise.all(user.appUsers.map((appUser) => {
                    return usClient.assignFlid(cy, appUser.role, appUser.id, createdUser.ProfileId, trustedAccessToken);
                }));
            })
            .then((otherResponse) => {
                var claims = user.appUsers.map(
                    (appUser) => {
                        return {
                            type: appUser.role,
                            value: appUser.id
                        };
                    });

                if (permissionsToGrant === undefined || permissionsToGrant === null || permissionsToGrant.length === 0) {
                    return createdUser;
                }

                return permClient.grantPermissions(cy, claims, permissionsToGrant, orgId, trustedAccessToken, idmAdministratorToken);
            })
            .then((permissionResponse) => {
                return createdUser;
            });
    };
};


module.exports = userHelper;
